version: '3.8'

networks:
  stock_network:

services:
  postgres:
    image: postgres:14
    container_name: postgres
    networks:
      - stock_network
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  stock-fetcher:
    build: .
    container_name: stock_project-stock-fetcher
    networks:
      - stock_network
    depends_on:
      - postgres
    command: tail -f /dev/null

  airflow:
    image: apache/airflow:2.7.0
    container_name: airflow
    restart: always
    networks:
      - stock_network
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__WEBSERVER__RBAC=True
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://myuser:mypassword@postgres:5432/stocks_db
      - AIRFLOW__CORE__FERNET_KEY="-Fn3HvQ1wYSJu3njJ2zoD3GhWM9zGxspzb6jVTVJiMI="
      - AIRFLOW__WEBSERVER__DEFAULT_USER_ROLE=Admin
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
      - _AIRFLOW_WWW_USER_EMAIL=admin@example.com
      - _AIRFLOW_WWW_USER_FIRSTNAME=Admin
      - _AIRFLOW_WWW_USER_LASTNAME=User
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./scripts/entrypoint.sh:/entrypoint.sh
      - /var/run/docker.sock:/var/run/docker.sock  
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    entrypoint: ["/bin/bash", "/entrypoint.sh"]

  airflow-scheduler:
    image: apache/airflow:2.7.0
    container_name: airflow-scheduler
    restart: always
    networks:
      - stock_network
    depends_on:
      - postgres
      - airflow
    command: scheduler
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://myuser:mypassword@postgres:5432/stocks_db
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      
  dashboard:
    build: .
    container_name: stock_dashboard
    restart: always
    networks:
      - stock_network
    depends_on:
      - postgres
    ports:
      - "5050:5000"
    volumes:
      - ./dashboard.py:/app/dashboard.py
      - ./templates:/app/templates 
    command: ["python", "dashboard.py"]


volumes:
  postgres_data: